name: CI Workflow of My Application

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: build app
        run: npm run build   

  build-and-test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Checkout Selenium Tests
        uses: actions/checkout@v4
        with:
          repository: indika02/studentautomation
          path: selenium-tests  

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 24

      # Only install Allure if not cached
      - name: Install Allure Commandline
        if: steps.cache-allure.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -zxvf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -sf /opt/allure/bin/allure /usr/bin/allure
          allure --version

      - name: Build Selenium tests with Maven
        run: |
          cd selenium-tests
          mvn clean install   

      - name: Run Selenium tests    
        run: |
          cd selenium-tests
          mvn clean test

      - name: Generate Allure Report
        run: |
          allure generate selenium-tests/allure-results -o selenium-tests/allure-report --clean

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: selenium-tests/allure-report

      - name: Rename Allure Report Folder
        run: |
          MODULE="${{ github.event.repository.name }}"
          VERSION="1.0.0"
          DATE=$(date +%Y-%m-%d)
          NEW_NAME="allure-report-${MODULE}-v${VERSION}-${DATE}"
          mv selenium-tests/allure-report selenium-tests/${NEW_NAME}
          echo "REPORT_PATH=selenium-tests/${NEW_NAME}" >> $GITHUB_ENV

      - name: Zip Allure Report
        run: |
          zip -r ${{ env.REPORT_PATH }}.zip ${{ env.REPORT_PATH }}

      - name: Send Allure Report to Members
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          email: ${{ secrets.EMAIL }}
          password: ${{ secrets.PASSWORD }}
          subject: Allure Test Report
          to: indikasenarathna356@gmail.com
          from: ${{ secrets.EMAIL }}
          body: |
            Hi,
            Allure test report for ${{ env.REPORT_PATH }} is attached.
              1. First, Make sure you have Allure commandline installed on your local machine. You can download it from https://docs.qameta.io/allure/#_installing_a_commandline
              2. Unzip the attached file to a desired location.
              3. Type command `allure open /path/to/unzipped/folder` to open the report in your default web browser.
            Thank you.
          attachments: ${{ env.REPORT_PATH }}.zip

  # Container:
  #     runs-on: ubuntu-latest
  #     needs: Test
  #     steps:
  #       - name: Checkout repository
  #         uses: actions/checkout@v4

  #       - name: Build Docker image
  #         run: docker build -t sms:latest .

  #       - name: Run Docker container
  #         run: docker run -p 8080:8080 sms:latest
