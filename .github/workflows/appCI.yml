name: CI Workflow of My Application

on:
  push:
    branches: [ main ]

jobs:
  Build-web-App:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: build app
        run: npm run build

      - name: Zip project folder
        run: |
          DATE=$(date +%Y-%m-%d)
          zip -r sms-${DATE}.zip . -x "node_modules/*"
          echo "PROJECT_ZIP=sms-${DATE}.zip" >> $GITHUB_ENV

      - name: Verify the zip file
        run: ls -lh *.zip      

      - name: Remove the old project folders in downloads
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.WEB_HOST }}
          username: ${{ secrets.WEB_USER }}
          key: ${{ secrets.TEST_SSHKEY }}    
          script: | 
            cd /home/ec2-user/downloads/
            rm -rf ${{ env.PROJECT_ZIP }}  

      - name: Upload the project zip into server  
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.WEB_HOST }}
          username: ${{ secrets.WEB_USER }}
          key: ${{ secrets.TEST_SSHKEY }}
          source: "${{ env.PROJECT_ZIP }}"
          target: "/home/ec2-user/downloads/"
          strip_components: 1
          
  Execute-Selenium-Tests:
    runs-on: ubuntu-latest
    needs: Build-web-App
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Checkout Selenium Tests
        uses: actions/checkout@v4
        with:
          repository: indika02/studentautomation
          path: selenium-tests  

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 24

      - name: Install Allure Commandline
        if: steps.cache-allure.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -zxvf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -sf /opt/allure/bin/allure /usr/bin/allure
          allure --version

      - name: Build and Run Selenium tests    
        run: |
          cd selenium-tests
          mvn clean test

      - name: Generate Allure Report
        run: |
          allure generate selenium-tests/allure-results -o selenium-tests/allure-report --clean

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: selenium-tests/allure-report


      - name: Zip Allure Report
        run: |
          cd selenium-tests
          DATE=$(date +%Y-%m-%d)
          NEW_NAME="allure-report-${DATE}.zip"
          zip -r ${NEW_NAME} allure-report
          echo "ZIP_NAME=${NEW_NAME}" >> $GITHUB_ENV

      - name: Check Allure report zip
        run: ls -lh selenium-tests/

      - name: Remove the old zip folders in downloads
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.TEST_HOST }}
          username: ${{ secrets.TEST_USER }}
          key: ${{ secrets.TEST_SSHKEY }}    
          script: | 
            cd /home/ec2-user/downloads/
            rm -rf ${{ env.ZIP_NAME }}

      - name: Copy Allure Report to Test Results server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.TEST_HOST }}
          username: ${{ secrets.TEST_USER }}
          key: ${{ secrets.TEST_SSHKEY }}
          source: "selenium-tests/${{ env.ZIP_NAME }}"
          target: "/home/ec2-user/downloads/"
          strip_components: 1

      - name: Extract and Replace Allure Report on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.TEST_HOST }}
          username: ${{ secrets.TEST_USER }}
          key: ${{ secrets.TEST_SSHKEY }}    
          script: |
            cd /usr/share/nginx/html/
            base="allure-report-$(date +'%Y-%m-%d')"; target="$base"; count=1; while [ -e "$target" ]; do target="${base}-$count"; ((count++)); done; sudo mv allure-report "$target"; echo "Renamed to: $target"
            sudo mv "$target" /home/ec2-user/resultbackups/
            cd /home/ec2-user/downloads/
            rm -rf allure-report
            unzip ${{ env.ZIP_NAME }}
            sudo mv allure-report /usr/share/nginx/html/
            sudo systemctl restart nginx

      - name: Send Test Results Notification to team members
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{secrets.EMAIL}}
          password: ${{secrets.PASSWORD}}
          subject: Allure Test Results for ${{env.ZIP_NAME}}
          to: indikasenarathna356@gmail.com
          from: ${{secrets.EMAIL}}
          body: |
            Hi All,
            Check the latest Allure test report for the build ${{env.ZIP_NAME}} at http://18.143.190.252/
            Thank you.
         
  Containerized-the-Application:
    runs-on: ubuntu-latest
    needs: Execute-Selenium-Tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/sms:latest .
      

      
